{"ast":null,"code":"var _jsxFileName = \"/Users/kushpanjabi/Desktop/Noteful/src/AddFolder.js\";\nimport React, { Component } from 'react';\nimport NoteContext from './NoteContext';\nimport PropTypes from 'prop-types';\nimport './AddFolder.css';\n\nclass AddFolder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      folderName: {\n        value: '',\n        touched: false\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const folderName = e.target.folderName;\n\n      const getRandomInt = (min, max) => {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n      };\n\n      const randId = getRandomInt(100, 999);\n      let folderId = \"b0716\".concat(randId, \"-ffaf-11e8-8eb2-f2801f1b9fd1\");\n      const folder = {\n        id: folderId,\n        name: folderName.value\n      };\n      this.setState({\n        error: null\n      });\n      fetch('http://localhost:9090/folders', {\n        method: 'POST',\n        body: JSON.stringify(folder),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(res => {\n        if (!res.ok) {\n          return res.json().then(error => {\n            throw error;\n          });\n        }\n\n        return res.json();\n      }).then(data => {\n        folderId = '';\n        folder.name = '';\n        this.context.addFolder(data);\n        this.props.history.push('/');\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          error\n        });\n      });\n    };\n\n    this.handleClickCancel = () => {\n      this.props.history.push('/');\n    };\n  }\n\n  updateFolderName(folderName) {\n    this.setState({\n      folderName: {\n        value: folderName,\n        touched: true\n      }\n    });\n  }\n\n  validateFolderName() {\n    const folderName = this.state.folderName.value.trim();\n    const foldersList = this.context.folders.map(folder => folder.name);\n\n    if (folderName.length === 0) {\n      return 'Name is required';\n    } else if (foldersList.includes(folderName)) {\n      return 'That folder name already exists. Please choose another.';\n    }\n  }\n\n  render() {\n    const error = this.state.error;\n    const folderNameError = this.validateFolderName();\n    let folderErrorExists = false;\n\n    if (folderNameError) {\n      folderErrorExists = true;\n    }\n\n    return React.createElement(\"section\", {\n      className: \"AddFolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"New Folder\"), React.createElement(\"form\", {\n      className: \"addFolder__form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AddFolder__error\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, error.message), this.state.folderName.touched && folderNameError), React.createElement(\"label\", {\n      htmlFor: \"folderName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Folder name: \"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"folderName\",\n      name: \"folderName\",\n      onChange: e => this.updateFolderName(e.target.value),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"AddFolder__buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClickCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: folderErrorExists,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nAddFolder.contextType = NoteContext;\nexport default AddFolder;\nAddFolder.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string\n};","map":{"version":3,"sources":["/Users/kushpanjabi/Desktop/Noteful/src/AddFolder.js"],"names":["React","Component","NoteContext","PropTypes","AddFolder","state","error","folderName","value","touched","handleSubmit","e","preventDefault","target","getRandomInt","min","max","Math","ceil","floor","random","randId","folderId","folder","id","name","setState","fetch","method","body","JSON","stringify","headers","then","res","ok","json","data","context","addFolder","props","history","push","catch","console","log","handleClickCancel","updateFolderName","validateFolderName","trim","foldersList","folders","map","length","includes","render","folderNameError","folderErrorExists","message","contextType","propTypes","string"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport NoteContext from './NoteContext';\nimport PropTypes from 'prop-types';\nimport './AddFolder.css';\n\nclass AddFolder extends Component {\n  static contextType = NoteContext;\n\n  state = {\n      error: null,\n      folderName: {\n          value: '',\n          touched: false\n        }\n  }\n\n  updateFolderName(folderName) {\n      this.setState({\n        folderName: {\n            value: folderName,\n            touched: true\n        }\n    })\n  }\n\n  validateFolderName() {\n    const folderName = this.state.folderName.value.trim();\n    const foldersList = this.context.folders.map(folder => folder.name);\n    if (folderName.length === 0) {\n      return 'Name is required';\n    }  else if (foldersList.includes(folderName)) {\n      return 'That folder name already exists. Please choose another.';\n    }\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { folderName } = e.target;\n\n    const getRandomInt = (min, max) => {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min; \n    }\n\n    const randId = getRandomInt(100, 999);\n    let folderId = `b0716${randId}-ffaf-11e8-8eb2-f2801f1b9fd1`;\n    const folder = {\n        id: folderId,\n        name: folderName.value\n    };\n\n    this.setState({\n        error: null\n    });\n\n    fetch('http://localhost:9090/folders', {\n        method: 'POST',\n        body: JSON.stringify(folder),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n    .then(res => {\n        if (!res.ok) {\n            return res.json().then(error => {\n                throw error\n            })\n        }\n        return res.json()\n    })\n    .then(data => {\n        folderId = ''\n        folder.name = ''\n        this.context.addFolder(data)\n        this.props.history.push('/')\n    })\n    .catch(error => {\n        console.log(error)\n        this.setState({ error })\n    })\n  }\n\n  handleClickCancel = () => {\n      this.props.history.push('/')\n  }\n\n  render() {\n    const { error } = this.state;\n    const folderNameError = this.validateFolderName();\n    let folderErrorExists = false;\n    if (folderNameError) {\n        folderErrorExists = true;\n    }\n\n    return (\n      <section className='AddFolder'>\n        <h2>New Folder</h2>\n        <form\n          className='addFolder__form'\n          onSubmit={this.handleSubmit}>\n            <div \n              className='AddFolder__error' \n              role='alert'>\n              {error && <p>{error.message}</p>}\n              {this.state.folderName.touched && folderNameError}\n            </div>\n\n            <label htmlFor='folderName'>Folder name: </label>\n            <input \n                type='text' \n                id='folderName' \n                name='folderName' \n                onChange={e => this.updateFolderName(e.target.value)}\n                required>\n            </input>\n\n            <div className='AddFolder__buttons'>\n                <button type='button' onClick={this.handleClickCancel}>\n                    Cancel\n                </button>\n                <button type='submit' disabled={folderErrorExists}>\n                    Save\n                </button>\n            </div>\n        </form>\n      </section>\n    )\n  }\n}\n\nexport default AddFolder;\n\nAddFolder.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string\n}"]},"metadata":{},"sourceType":"module"}